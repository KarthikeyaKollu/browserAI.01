<|system|>
You are a helpful assistant. Your task is to either rewrite an existing email to improve its clarity and professionalism or generate a new professional email based on user input. Ensure the language is formal and appropriate for professional communication.
<|end|>

<|user|>
I need you to rewrite the following email to make it more professional:

Hi team,

Just a quick reminder that the project deadline is June 30. Please get your parts to me by June 25 so we can review. Thanks for the hard work!

Cheers,
[Your Name]
<|end|>

<|assistant|>

<|end|>















// function sendDataToBackground_Search(query) {
//   chrome.runtime.sendMessage({
//     type: "SEARCH",
//     data: query
//   }, (response) => {
//     if (response && response.resp) {
//       console.log(response.resp)
//       const container = document.getElementById('container');
//       const loading_search = document.querySelector('.loading_search');

//       const parsedContent = marked.parse(response.resp);

//       container.innerHTML = parsedContent;
//       loading_search.classList.add('hidden')

//       Prism.highlightAll();

//       console.log("Received response from popup:", response);

//     } else {
//       console.log("No response received from content.");
//     }
//   });


// }













            <div class="flex justify-start mb-6 w-[90%]">
              <div class="bg-gray-100 p-4 rounded-tl-lg rounded-tr-lg rounded-br-lg ml-6 glow w-[90%] glow " id="response_llm">
        <pre>
                
                  <code class="language-python">
                    11111
                  </code>
                
                </pre>
        <pre>
                
                  <code class="language-python">
                    11111
                  </code>
                
                </pre>
        <pre>
                
                  <code class="language-python">
                    11111
                  </code>
                
                </pre>
                
            
              
                  <p>helloo</p>
                <pre >
                
                  <!-- <div class="bg-gray-500 flex "> <button class="copy">copy</button> 
                  <span>javascript</span>
                  </div> -->
                  <code class="language-javascript">
                    function updateGameState(gameState) {
                      // Update player positions and velocities
                      for (let i = 0; i  gameState.players.length; i++) {
                        gameState.players[i].position.x += gameState.players[i].speedX * deltaTime;
                        gameState.players[i].position.y += gameState.players[i].speedY * deltaTime;
                      }
                    
                      // Update game objects
                      for (let i = 0; i  gameState.objects.length; i++) {
                        gameState.objects[i].position.x += gameState.objects[i].speedX * deltaTime;
                        gameState.objects[i].position.y += gameState.objects[i].speedY * deltaTime;
                      }
                    }
                  </code></pre>
                

              </div>
          </div>
            

        
          

              
          
          document.addEventListener('mouseup', (event) => {
  let selectedText = '';

  // Handle selection for inputs and textareas
  if (event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA') {
    selectedText = event.target.value.substring(event.target.selectionStart, event.target.selectionEnd).trim();
  } else {
    // Handle selection for regular elements
    selectedText = window.getSelection().toString().trim();
  }

  if (selectedText) {
    chrome.runtime.sendMessage({ type: 'TEXT_SELECTED', text: selectedText });

    // Apply skeleton animation class
    const selectionRange = window.getSelection().getRangeAt(0);
    const range = selectionRange.cloneRange();
    const selectedNode = range.startContainer.parentNode;
    
    // Add class for animation (assuming you have a 'animate-skeleton' class in Tailwind)
    selectedNode.classList.add('animate-pulse','bg-gradient-to-r from-cyan-500 to-blue-500');
    
    // Remove the class after animation duration (adjust as per your animation timing)
    setTimeout(() => {
      selectedNode.classList.remove('animate-pulse');
    }, 1000); // Adjust the time according to your animation duration
  }
});




















<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Interface</title>
    <link rel="stylesheet" href="output.css">
     <script src="https://cdn.tailwindcss.com"></script> 
</head>
<body class="GyAeWb">
    <style>
        .animated-gradient {
          background: linear-gradient(to right, rgb(20, 31, 174), rgb(166, 188, 224), rgb(20, 31, 174), rgb(153, 156, 156));
          background-size: 400%;
          animation: gradient-animation infinite;
        }
        
        @keyframes gradient-animation {
          from {
            background-position: 100% 0%;
          }
          to {
            background-position: 0% 0%;
          }
        }
        
        .slow-animation {
          animation-duration: 5s; /* Slow animation */
        }
        
        .medium-animation {
          animation-duration: 3s; /* Medium animation */
        }
        
        .fast-animation {
          animation-duration: 1s; /* Fast animation */
        }
        
        .super-fast-animation {
          animation-duration: 0.5s; /* Super fast animation */
        }
        </style>
    <div class="bg-gray-900 text-white min-h-screen flex justify-center items-center">
      <div class="">
        <div class="bg-black relative border border-gray-700  p-4 rounded-tr-lg rounded-tl-lg shadow-lg w-96">
            <div class="flex items-center bg-gray-700 justify-around mb-4 p-1 rounded-md">
                    <button class=" text-slate-300 py-1 px-3 rounded-lg text-sm">Live Search</button>
                    <button class="bg-black text-white py-1 px-3 rounded-lg text-sm ">Basic Search</button>
                </div>
           
            <div class="mb-4 h-64  overflow-auto">

            

              <p class="text-white font-semibold pt-4" id="container">

                jabjchwoecvwevwwegb2
                <div class="loading_search">
                <div class="animated-gradient h-3 rounded-md my-3 slow-animation"></div>
              <div class="animated-gradient h-3 rounded-md my-3 medium-animation w-[90%]"></div>
              <div class="animated-gradient h-3 rounded-md my-3 fast-animation w-[50%]"></div>
                </div>
              </p>
     


                <div class="animated-gradient h-3 rounded-md my-3 slow-animation"></div>
                <div class="animated-gradient h-3 rounded-md my-3 medium-animation w-[90%]"></div>
              
                <div class="animated-gradient h-3 rounded-md my-3 super-fast-animation w-[50%]"></div>
                
                
            </div>
           
            <div class="flex justify-between">
                <button class="border border-blue-700 text-white py-2 px-4 rounded-lg">Ask a followup</button>
                <button class="bg-gray-700 text-white py-2 px-4 rounded-lg">Start New Chat</button>
            </div>
            <div class="mt-4 text-center">
                <button class="border border-purple-300 text-white  px-3 rounded-md text-[12px]">Powered by BrowserAI</button>
            </div>
            <div class="">
            
        </div> 

       
    </div>
   
    <div class=" bg-yellow-600  text-sm text-center  py-4 px-4 rounded-br-lg rounded-bl-lg w-full">AI maybe inaccurate. Use 'Live Search' for best result </div>
  </div> 
    </div>
    




    </body>
</html>
 -->